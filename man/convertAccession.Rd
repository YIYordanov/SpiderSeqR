% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Accession_Conversion_Functions.R
\name{convertAccession}
\alias{convertAccession}
\title{Convert between accession types}
\usage{
convertAccession(acc_vector)
}
\arguments{
\item{acc_vector}{A vector of accessions \strong{(all must belong to the same type)}}
}
\value{
A data frame with conversion between all accession types
}
\description{
\code{convertAccession} converts a vector of accessions (all belonging into the same accession type) into all possible accession types within SRA and GEO. If no SRA/GEO conversion is possible, all the missing accession types are marked as NAs.
}
\section{Accepted Accession Types}{

\code{convertAccession} accepts any of the 4 SRA or 2 GEO accession types (see section \emph{'Background Information on Accession Types')}. 
\code{convertAccession} accepts only one accession type at a time. 

For example, the following queries are NOT allowed: \code{convertAccession("SRR_____", "SRP_____")}, \code{convertAccession("GSE_____", "SRP_____")}. In order to obtain the above results, it is necessary to run separate queries for each accession type, and, if desirable, bind the data frames together (e.g. \code{rbind(convertAccession("SRR_____"), convertAccession("SRP_____"))}).

SRA accessions differing by the first letter belong to the same type, hence it is possible to run: \code{convertAccession("SRP_____", "ERP_____")}
}

\section{Output format}{

The function outputs a data frame with conversion of the input accessions into all possible types.

In the best case scenario, i.e. if an accession exists in both SRA and GEO databases, these would include all 6 accession types (SRR, SRX, SRS, SRP, GSM, GSE).

If an accession exists only in one of the databases, the conversion will be limited to that one database. For example, if an accession only exists in SRA, only SRA accessions will be provided, whilst the GEO columns will be populated with NAs.
}

\section{Troubleshooting}{

The conversion between SRA and GEO databases is based on a custom database generated by \code{startSpideR()} function. To ensure best results, make sure that the most up to date versions of the databases. To improve results, you can do the following:
\enumerate{
    \item Download the most up to date versions of SRAmetadb.sqlite and GEOmetadb.sqlite files - this is done by running \code{\link{startSpideR}}, specifying an appropriate argument for expiry period of database files (e.g. \code{startSpideR(dir = getwd(), general_expiry = 1)})
    \item Generate a fresh custom database for conversion between accessions (SRR_GSM.sqlite) - this is also done by running \code{\link{startSpideR}}, specifying an appropriate argument for expiry period of the database file
    \item As a last resort, manually search for the missing conversions online
}

NOTE: because the SRR_GSM.sqlite database is machine-generated, there is some risk that it might not include some conversions in case they have been recorded in the database in a non-standard way. If in doubt, it is worth checking the accession page online.
However, users should be aware that the overlap between SRA and GEO is only about 20% (at the time of writing), so most entries will not have corresponding accession numbers in the other database
}

\section{Background Information on Accession Types}{

The two lists below include accession types within SRA and GEO respectively. 

All of these are supported by the convertAccession function.

\strong{SRA}
\enumerate{
    \item SRP(/DRP/ERP) - project_accession
    \item SRS(/DRS/ERS) - sample_accession
    \item SRX(/DRX/ERX) - experiment_accession
    \item SRR(/DRR/ERR) - run_accession
}

NOTE: depending on the location of the database (NCBI, EBI or DDBJ), these accessions might begin with a different letter (S, E or D), so the accession levels can be either SRP/SRX/SRS/SRR or ERP/ERX/ERS/ERR or DRP/DRX/DRS/ERR. Accessions beginning with 'S' are by far the most common.


\strong{GEO}
\enumerate{
    \item GSE - series_id
    \item GSM - sample
}

NOTE: GEO accession system is further complicated by existence of 'superseries', which act as higher level series. In these cases a given GSM would belong to multiple (at least two) GSEs - its series_id and superseries.
}

\examples{

convertAccession(c("SRP010068", "SRP020088"))

convertAccession("GSE1") # Only in GEO. Takes a while because GSE1... is ubiquitous
convertAccession(c("GSE1", "GSE45530")) # Mixed GEO/SRA. Takes a while because GSE1... is ubiquitous

convertAccession("ERP016268") # Only in SRA
convertAccession(c("ERP016268", "SRP020088")) # Mixed SRA/GEO





}
