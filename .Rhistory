devtools::load_all()
searchForAccession("GSM1005194")
devtools::load_all()
searchForAccession("GSM1005194")
GSM1005194 <- .Last.value
View(GSM1005194)
colnames(GSM1005194)
devtools::load_all()
searchForAccession("GSM1005194")
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
View(temp_sra_srr_gsm_geo_df)
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
View(temp_srr_gsm_df)
View(temp_sra_srr_gsm_geo_df)
colnames(temp_sra_srr_gsm_geo_df)
"sample_attribute" %in% colnames(temp_sra_srr_gsm_geo_df)
"SRA_sample_attribute" %in% colnames(temp_sra_srr_gsm_geo_df)
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
print(TRUE)
print(zzz)
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
ERP001752 <- searchForAccession("ERP001752")
ERP001752 <- .Last.value
View(ERP001752)
colnames(ERP001752)
ERP001752 <- searchForAccession("ERP001752")
devtools::load_all()
compare(readRDS("ERP001752_ALL_db_190719-164049.Rda"), readRDS("/home/AS2382/Documents/SpideR_Packaging201709/SpideR_Sample_Outputs/20190619_ERP001752/ERP001752_ALL_db_190619-122105.Rda"))
compare(readRDS("ERP001752_ALL_db_190719-164049.Rda"), readRDS("/home/AS2382/Documents/SpideR_Packaging201709/SpideR_Sample_Outputs/20190619_ERP001752/ERP001752_ALL_db_190619-122105.Rda"), allowAll = TRUE)
compare(readRDS("ERP001752_OTHER_db_190719-164050.Rda"), readRDS("/home/AS2382/Documents/SpideR_Packaging201709/SpideR_Sample_Outputs/20190619_ERP001752/ERP001752_OTHER_db_190619-122507.Rda"), allowAll = TRUE)
compare(readRDS("ERP001752_ALL_sm_190719-160621.Rda_190719-164049.Rda"), readRDS("/home/AS2382/Documents/SpideR_Packaging201709/SpideR_Sample_Outputs/20190619_ERP001752/ERP001752_ALL_sm_190619-122105.Rda_190619-122105.Rda"), allowAll = TRUE)
compare(readRDS("ERP001752_ALL_sm_190719-160621.Rda_190719-164049.Rda"), readRDS("/home/AS2382/Documents/SpideR_Packaging201709/SpideR_Sample_Outputs/20190619_ERP001752/ERP001752_ALL_sm_190619-122105.Rda"), allowAll = TRUE)
compare(readRDS("ERP001752_ALL_sm_190719-160621.Rda"), readRDS("/home/AS2382/Documents/SpideR_Packaging201709/SpideR_Sample_Outputs/20190619_ERP001752/ERP001752_ALL_sm_190619-122105.Rda"), allowAll = TRUE)
stat5 <- searchAnywhere("stat5", acc_levels = c("run", "experiment", "sample", "gsm"))
devtools::load_all()
stat5 <- searchAnywhere("stat5", acc_levels = c("run", "experiment", "sample", "gsm"))
View(stat5)
devtools::load_all()
stat5b <- searchAnywhere("stat5", acc_levels = c("run", "experiment", "sample", "gsm"))
dbGetQuery(geo_con, "SELECT gsm FROM gsm GROUP BY RANDOM() LIMIT 10")
gsms <- dbGetQuery(geo_con, "SELECT gsm FROM gsm GROUP BY RANDOM() LIMIT 10")$gsm
gsms <- dbGetQuery(geo_con, "SELECT gsm FROM gsm GROUP BY RANDOM() LIMIT 10")$gsm
gsms
simpleQuery <- function(gsms){
df <- data.frame()
for (g in gsms){
chunk <- dbGetQuery(geo_con, paste0("SELECT * FROM gsm WHERE gse WHERE gsm = '", g, "'"))
df <- rbind(df, chunk)
}
return(df)
}
simpleQuery(gsms)
simpleQuery <- function(gsms){
df <- data.frame()
for (g in gsms){
chunk <- dbGetQuery(geo_con, paste0("SELECT * FROM gsm WHERE gsm = '", g, "'"))
df <- rbind(df, chunk)
}
return(df)
}
simpleQuery(gsms)
batchedQuery <- function(gsms){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(gsm = '", gsms, "' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
query <- paste0(query, query_gsms)
df <- dbGetQuery(geo_con, query_gsms)
return(df)
}
batchedQuery(gsms)
batchedQuery <- function(gsms){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(gsm = '", gsms, "' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
query <- paste0(query, query_gsms, ")")
df <- dbGetQuery(geo_con, query_gsms)
return(df)
}
batchedQuery(gsms)
batchedQuery <- function(gsms){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(gsm = '", gsms, "' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
print(query_gsms)
query <- paste0(query, query_gsms, ")")
print(query)
df <- dbGetQuery(geo_con, query_gsms)
return(df)
}
batchedQuery(gsms)
dbGetQuery(geo_con, "SELECT * FROM gsm WHERE ((gsm = 'GSM800898' ) OR (gsm = 'GSM2720413' )")
dbGetQuery(geo_con, "SELECT * FROM gsm WHERE ((gsm = 'GSM800898' ) OR (gsm = 'GSM2720413' ))")
dbGetQuery(geo_con, "SELECT * FROM gsm WHERE ((gsm = 'GSM800898' ) OR (gsm = 'GSM2720413' )")
dbGetQuery(geo_con, "SELECT * FROM gsm WHERE ((gsm = 'GSM800898' ) OR (gsm = 'GSM2720413' ) OR (gsm = 'GSM332861' ) OR (gsm = 'GSM3677901' ) OR (gsm = 'GSM3083479' ) OR (gsm = 'GSM358478' ) OR (gsm = 'GSM466594' ) OR (gsm = 'GSM3747427' ) OR (gsm = 'GSM634183' ) OR (gsm = 'GSM412192' ))")
batchedQuery <- function(gsms){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(gsm = '", gsms, "' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
print(query_gsms)
query <- paste0(query, query_gsms, ")")
print(query)
df <- dbGetQuery(geo_con, query)
return(df)
}
batchedQuery(gsms)
query_comp <- summary(microbenchmark(simpleQuery(gsms), batchedQuery(gsms), 10))
batchedQuery <- function(gsms){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(gsm = '", gsms, "' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
query <- paste0(query, query_gsms, ")")
#print(query)
df <- dbGetQuery(geo_con, query)
return(df)
}
query_comp
query_comp <- summary(microbenchmark(simpleQuery(gsms), batchedQuery(gsms), 10))
View(query_comp)
query_comp <- summary(microbenchmark(simpleQuery(gsms), batchedQuery(gsms)))
View(query_comp)
n <- 10
i <- 1
for (n in seq(0,1000, by=10)){
gsms[[i]] <- dbGetQuery(geo_con, paste0("SELECT gsm FROM gsm GROUP BY RANDOM() LIMIT ", n))$gsm
i <- i+1
}
n <- 10
i <- 1
gsms <- list()
for (n in seq(0,1000, by=10)){
gsms[[i]] <- dbGetQuery(geo_con, paste0("SELECT gsm FROM gsm GROUP BY RANDOM() LIMIT ", n))$gsm
i <- i+1
}
gsms[[1]]
gsms[[2]]
gsms[[3]]
gsms[[4]]
gsms[[1]] <- NULL
dim(gsms)
length(gsms)
gsms[[1]]
gsms[[2]]
gsms[[3]]
gsms[[100]]
length(gsms[[100]])
for (i in seq_along(gsms)){ print(length(gsms[[i]]))}
query_comp <- summary(microbenchmark(simpleQuery(gsms[[50]]), batchedQuery(gsms[[50]])))
View(query_comp)
tic(); batchedQuery(gsms[[50]]); toc()
tic(); simpleQuery(gsms[[50]]); toc()
query_comp <- data.frame()
for (i in 1:10){
chunk <- summary(microbenchmark(simpleQuery(gsms[[i]]), batchedQuery(gsms[[i]])))
chunk$Length <- rep(i,2)
query_comp <- rbind(query_comp, chunk)
}
query_comp$min[1]
query_comp$min[2]
query_comp$min[3]
query_comp$min[20]
ggplot(query_comp, aes(mean, Length, fill = expr)) + geom_bar(stat = "identity")
ggplot(query_comp, aes(mean, Length)) + geom_bar(stat = "identity")
ggplot(query_comp, aes(mean, Length)) + geom_point()
ggplot(query_comp, aes(mean, Length, fill = expr)) + geom_point()
ggplot(query_comp, aes(mean, Length)) + geom_point(fill = expr)
summary(microbenchmark(simpleQuery(gsms[[2]]), batchedQuery(gsms[[2]]), unit = "nanosec"))
summary(microbenchmark(simpleQuery(gsms[[2]]), batchedQuery(gsms[[2]]), unit = "ms"))
query_comp_1_10 <- query_comp
query_comp <- data.frame()
for (i in 1:5){
chunk <- summary(microbenchmark(simpleQuery(gsms[[i]]), batchedQuery(gsms[[i]]), unit = "ms"))
chunk$Length <- rep(i,2)
query_comp <- rbind(query_comp, chunk)
}
query_comp <- data.frame()
for (i in 1:5){
print(i)
chunk <- summary(microbenchmark(simpleQuery(gsms[[i]]), batchedQuery(gsms[[i]]), unit = "ms"))
chunk$Length <- rep(i,2)
query_comp <- rbind(query_comp, chunk)
}
View(query_comp_1_10)
i*10
query_comp_1_5 <- query_comp
query_comp <- data.frame()
for (i in 1:100){
print(i)
chunk <- summary(microbenchmark(simpleQuery(gsms[[i]]), batchedQuery(gsms[[i]]), unit = "ms"))
chunk$Length <- rep(i*10,2)
query_comp <- rbind(query_comp, chunk)
}
View(query_comp)
saveRDS(query_comp, "Batched_vs_Simple_Query.Rda")
ggplot(query_comp, aes(mean, Length)) + geom_point(fill = expr)
ggplot(query_comp, aes(mean, Length)) + geom_point()
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr)) + geom_smooth()
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr)) + geom_errorbar(aes(ymin = lq, ymax = uq))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr)) + geom_errorbar(aes(ymin = lq, ymax = uq))
?geom_errorbar
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr)) + geom_linerange(aes(ymin = lq, ymax = uq))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr)) + geom_linerange(aes(ymin = lq, ymax = uq, col = expr))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr)) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr), size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(query_comp, aes(mean, Length)) + geom_point(aes(col = expr), size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq, colour = expr))
?geom_ribbon
ggplot(query_comp, aes(mean, Length, col = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq, colour = expr))
ggplot(query_comp, aes(mean, Length, col = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(query_comp, aes(mean, Length, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
query_comp$expr
q2 <- query_comp %>% filter(expr = batchedQuery(gsms[[i]]))
q2 <- query_comp %>% filter(expr == batchedQuery(gsms[[i]]))
q2 <- query_comp %>% filter(expr == "batchedQuery(gsms[[i]])")
q2
ggplot(q2, aes(mean, Length, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(q2, aes(median, Length, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(q2, aes(Length, median col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(q2, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq))
ggplot(q2, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3)
ggplot(q2, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3, linetype = 0)
ggplot(q2, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3, linetype = 0) + geom_ribbon(aes(ymin = min, ymax = max), alpha =.1, linetype = 0)
ggplot(query_comp, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3, linetype = 0) + geom_ribbon(aes(ymin = min, ymax = max), alpha =.1, linetype = 0)
ggplot(query_comp, aes(Length, mean)) + geom_point(aes(col = expr))
ggplot(query_comp, aes(Length, mean)) + geom_point(aes(col = expr))
ggplot(query_comp, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3, linetype = 0) + geom_ribbon(aes(ymin = min, ymax = max), alpha =.1, linetype = 0)
saveRDS(gsms, "GSMs_List_10_1000_gsms.Rda")
write.csv(query_comp, "Batched_vs_Simple_Query_df.csv")
write.csv(query_comp, "Batched_vs_Simple_Query_df.csv", row.names = NULL)
?write.csv
write.csv(query_comp, "Batched_vs_Simple_Query_df.csv", row.names = FALSE)
ggplot(query_comp, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3, linetype = 0) + geom_ribbon(aes(ymin = min, ymax = max), alpha =.1, linetype = 0)
p <- ggplot(query_comp, aes(Length, median, col = expr, group = expr, fill = expr)) + geom_point(size = 0.1) + geom_ribbon(aes(ymin = lq, ymax = uq), alpha = .3, linetype = 0) + geom_ribbon(aes(ymin = min, ymax = max), alpha =.1, linetype = 0)
query_comp %>% group_by(Length) %>% group_by(expr) %>% mutate(Ratio = mean/mean)
for (n in seq(0,1000, by=10)){
gsms[[i]] <- dbGetQuery(geo_con, paste0("SELECT gse FROM gse GROUP BY RANDOM() LIMIT ", n))$gse
i <- i+1
}
length(gsms)
gsms_copy <- gsms
gsms <- gsms[1:100]
gsms[[2]]
gsms[[98]]
simpleGSEQuery <- function(gses){
df <- data.frame()
for (g in gses){
query <- paste0("SELECT * FROM gsm WHERE series_id LIKE '%", g, "' OR series_id LIKE '%", g, ",%'")
chunk <- dbGetQuery(geo_con, query)
df <- rbind(df, chunk)
}
return(df)
}
i <- 1
gses <- list()
for (n in seq(0,1000, by=10)){
gses[[i]] <- dbGetQuery(geo_con, paste0("SELECT gse FROM gse GROUP BY RANDOM() LIMIT ", n))$gse
i <- i+1
}
gses[1]
gses[2]
length(gses)
gses[[1]] <- NULL
simpleGSEQuery(gses[[1]])
temp1 <- .Last.value
View(temp1)
batchedQuery <- function(gses){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(series_id LIKE '%", g, "' OR series_id LIKE '%", g, ",%' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
query <- paste0(query, query_gsms, ")")
print(query)
#df <- dbGetQuery(geo_con, query)
#return(df)
}
batchedGSEQuery(gses[[1]])
batchedQuery <- function(gsms){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(gsm = '", gsms, "' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
query <- paste0(query, query_gsms, ")")
#print(query)
df <- dbGetQuery(geo_con, query)
return(df)
}
batchedGSEQuery <- function(gses){
query <- "SELECT * FROM gsm WHERE ("
query_gsms <- paste0("(series_id LIKE '%", g, "' OR series_id LIKE '%", g, ",%' ) OR ", collapse = "")
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
query <- paste0(query, query_gsms, ")")
print(query)
#df <- dbGetQuery(geo_con, query)
#return(df)
}
batchedGSEQuery(gses[[1]])
batchedGSEQuery <- function(gses){
query <- "SELECT * FROM gsm WHERE ("
for (g in gses){
query_gsms <- paste0("(series_id LIKE '%", g, "' OR series_id LIKE '%", g, ",%' ) OR ", collapse = "")
}
query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
query <- paste0(query, query_gsms, ")")
print(query)
#df <- dbGetQuery(geo_con, query)
#return(df)
}
batchedGSEQuery(gses[[1]])
batchedGSEQuery <- function(gses){
query <- "SELECT * FROM gsm WHERE ("
for (g in gses){
query_gsms <- paste0("(series_id LIKE '%", g, "' OR series_id LIKE '%", g, ",%' ) OR ")
query <- paste0(query, query_gsms)
}
query <- substr(query, 1, nchar(query)-4)
query <- paste0(query, ")")
#query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
#query <- paste0(query, query_gsms, ")")
print(query)
#df <- dbGetQuery(geo_con, query)
#return(df)
}
batchedGSEQuery(gses[[1]])
batchedGSEQuery <- function(gses){
query <- "SELECT * FROM gsm WHERE ("
for (g in gses){
query_gsms <- paste0("(series_id LIKE '%", g, "' OR series_id LIKE '%", g, ",%') OR ")
query <- paste0(query, query_gsms)
}
query <- substr(query, 1, nchar(query)-4)
query <- paste0(query, ")")
#query_gsms <- substr(query_gsms, 1, nchar(query_gsms)-4)
#print(query_gsms)
#query <- paste0(query, query_gsms, ")")
#print(query)
df <- dbGetQuery(geo_con, query)
#return(df)
}
batchedGSEQuery(gses[[1]])
temp1b <- .Last.value
identical(temp1, temp1b)
dim(temp1b)
compare(temp1, temp1b, allowAll = TRUE)
query_comp_GSM <- query_comp
View(query_comp_GSM)
query_comp <- summary(microbenchmark(simpleGSEQuery(gses[[1]]), batchedGSEQuery(gses[[1]])))
i <- 1
gses <- list()
for (n in seq(1,100, by=1)){
gses[[i]] <- dbGetQuery(geo_con, paste0("SELECT gse FROM gse GROUP BY RANDOM() LIMIT ", n))$gse
i <- i+1
}
gses[[1]]
query_comp <- summary(microbenchmark(simpleGSEQuery(gses[[1]]), batchedGSEQuery(gses[[1]])))
query_comp
#query_comp <- summary(microbenchmark(simpleGSEQuery(gses[[1]]), batchedGSEQuery(gses[[1]])))
query_comp
summary(microbenchmark(simpleGSEQuery(gses[[1]]), batchedGSEQuery(gses[[1]]), unit = "ms", times = 1))
summary(microbenchmark(simpleGSEQuery(gses[[100]]), batchedGSEQuery(gses[[100]]), unit = "ms", times = 1))
length(gses[[100]])
40000/60
400*100
400*100/60
summary(microbenchmark(simpleGSEQuery(gses[[50]]), batchedGSEQuery(gses[[50]]), unit = "ms", times = 1))
summary(microbenchmark(simpleGSEQuery(gses[[75]]), batchedGSEQuery(gses[[75]]), unit = "ms", times = 1))
summary(microbenchmark(simpleGSEQuery(gses[[25]]), batchedGSEQuery(gses[[25]]), unit = "ms", times = 1))
925*25
23125/3600
gses[[1]]
i <- 1
gses <- list()
for (n in seq(0,100, by=5)){
gses[[i]] <- dbGetQuery(geo_con, paste0("SELECT gse FROM gse GROUP BY RANDOM() LIMIT ", n))$gse
i <- i+1
}
gses[[1]] <- "GSE45331"
gses
length(gses)
i <- 1
gses_small <- list()
for (n in seq(1,4, by=1)){
gses_small[[i]] <- dbGetQuery(geo_con, paste0("SELECT gse FROM gse GROUP BY RANDOM() LIMIT ", n))$gse
i <- i+1
}
gses <- gses_small
query_comp <- data.frame()
for (i in seq_along(gses)){
print(i)
chunk <- summary(microbenchmark(simpleGSEQuery(gses[[i]]), batchedGSEQuery(gses[[i]]), unit = "ms", times = 10))
chunk$Length <- rep(length(gses[[i]]),2)
query_comp <- rbind(query_comp, chunk)
}
query_comp
query_comp_small <- query_comp
query_comp
i <- 1
gses <- list()
for (n in seq(5,100, by=5)){
gses[[i]] <- dbGetQuery(geo_con, paste0("SELECT gse FROM gse GROUP BY RANDOM() LIMIT ", n))$gse
i <- i+1
}
gses
t100 <- 1:100
t100 <- 1:20
3%2
3%%2
rm(t100)
t20 <- 1:20
t20[%%5==0]
t20[t20%%5==0]
t20[t20%%5!0] <- paste0("Not divisible: ", t20[t20%%5!=0])
t20[t20%%5!=0] <- paste0("Not divisible: ", t20[t20%%5!=0])
t20
listValidColumns <- function(){
# Database connections ####
sra_database_name <- "sra_con"
geo_database_name <- "geo_con"
database_env <- ".GlobalEnv"
# Columns that are not prefixed ####
sra_acc <- c("run_accession", "experiment_accession", "sample_accession", "study_accession", "submission_accession")
geo_acc <- c("gsm", "series_id")
# List of other columns ####
oth_columns <- c("input", "control",
"sa_tissue", "sa_antibody", "sa_gene", "sa_treatment", "sa_remainder",
"ch1_tissue", "ch1_antibody", "ch1_gene", "ch1_treatment", "ch1_remainder",
"lane", "mer", "pairedEnd", "n")
oth_columns <- paste0("OTH_", oth_columns)
add_columns <- c("gsm_check")
# Create lists of db columns ####
sra_columns <- DBI::dbListFields(get(sra_database_name, envir = get(database_env)), "sra")
gsm_columns <- DBI::dbListFields(get(geo_database_name, envir = get(database_env)), "gsm")
gse_columns <- DBI::dbListFields(get(geo_database_name, envir = get(database_env)), "gse")
sra_columns[!sra_columns %in% sra_acc] <- paste0("SRA_", sra_columns[!sra_columns %in% sra_acc])
#sra_columns <- c(sra_acc, sra_columns) # NOTE: order not preserved
gsm_columns[!gsm_columns %in% geo_acc] <- paste0("GSM_", gsm_columns[!gsm_columns %in% geo_acc])
#gsm_columns <- c(geo_acc, gsm_columns) # NOTE: order not preserved
gse_columns[!gse_columns %in% geo_acc] <- paste0("GSE_", gse_columns[!gse_columns %in% geo_acc])
#gse_columns <- c(geo_acc, gse_columns) # NOTE: order not preserved
db_columns <- list(sra= sra_columns, gsm = gsm_columns, gse = gse_columns, oth = oth_columns, added = add_columns)
return(db_columns)
}
listValidColumns()
unlist(listValidColumns())
as.character(unlist(listValidColumns()))
rm(listValidColumns())
rm(listValidColumns)
devtools::load_all()
names(listValidColumns())
devtools::load_all()
names(listValidColumns())
dim(query_comp)
df2 <- df
View(df)
for (i in 1:dim(df)[2]){
df[ , i] <- as.character(df[, i])
}
library(compare)
compare(df, df2, allowAll = TRUE)
View(sample_sra)
dbGetQuery(sra_con, "SELECT count(*) FROM sra WHERE spots LIKE '%a%'")
dbGetQuery(sra_con, "SELECT count(*) FROM sra WHERE spots LIKE '%e%'")
dbGetQuery(sra_con, "SELECT count(*) FROM sra WHERE spots LIKE '%i%'")
dbGetQuery(sra_con, "SELECT count(*) FROM sra WHERE spots LIKE '%o%'")
dbGetQuery(sra_con, "SELECT count(*) FROM sra WHERE spots LIKE '%u%'")
dbGetQuery(sra_con, "SELECT count(*) FROM sra WHERE spots LIKE '%y%'")
saveRDS(query_comp_small, "query_comp_small_gse.Rda")
devtools::document()
class(df)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
gses
saveRDS(gses_small, "gses_small.Rda")
saveRDS(gses, "gses.Rda")
query_comp <- data.frame()
for (i in seq_along(gses)){
print(i)
chunk <- summary(microbenchmark(simpleGSEQuery(gses[[i]]), batchedGSEQuery(gses[[i]]), unit = "ms", times = 10))
chunk$Length <- rep(length(gses[[i]]),2)
query_comp <- rbind(query_comp, chunk)
}
saveRDS(query_comp, "query_comp.Rda")
query_comp <- rbind(query_comp_small, query_comp)
