BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
startSpiderSeqRDemo()
df <- searchForAccession("SRP026280")
df <- filterByTerm(df, "TRIMKD") # Filter by 'TRIMKD' anywhere within df
df <- searchForAccession("SRP026280")
View(df)
df <- filterByTerm(df, "SRA_experiment_title: TRIMKD")
View(df)
ttt1 <- function(x = c("a", "b")){
def_values <- c("a", "b", "c")
x <- match.arg(x, def_values, several.ok = TRUE)
return(x)
}
ttt1("a")
ttt1(c("a", "b"))
ttt1(c("a", "b", "c"))
ttt1(c("a", "c", "b"))
devtools::load_all()
startSpiderSeqRDemo()
df <- searchForAccession("SRP026280")
df2 <- filterQueryBySRAAccessionLevel("TRIMKD", df)
devtools::load_all()
df2 <- filterQueryBySRAAccessionLevel("TRIMKD", df)
colnames(df)
df2 <- filterByTerm(df[,-c(55:75)], "TRIMKD")
df2 <- filterByTerm(df[,-c(44:75)], "TRIMKD")
df2 <- filterByTerm(df[,-c(16:75)], "TRIMKD")
df2 <- filterByTerm(df[,-c(55:139)], "TRIMKD")
df2 <- filterByTerm(df[,-c(14:139)], "TRIMKD")
df2 <- filterByTerm(df[,-c(55:75)], "TRIMKD")
df2 <- filterByTerm(df[,-c(55:139)], "TRIMKD")
View(df2)
BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
devtools::build_manual()
devtools::document()
?convertAccession
devtools::document()
?convertAccession
devtools::document()
?convertAccession
filterByTermByAccessionLevel(?)
?filterByTermByAccessionLevel
devtools::document()
?filterByTermByAccessionLevel
?addMissingSamples
?createFtsTable
?SRA_GEO_Category_Conversion
?sra_demo
?srr_demo
?gse_demo
?gsm_demo
filterByTerm()
?filterByTerm
?getDatabaseInformation
?getColumnDescriptions
getAnywhere(ttt1)
rm(tttt1)
rm(ttt1)
devtools::load
devtools::load_all()
vConditionVerifier(c("n", "p"), c("n", "np", "p")
)
vConditionVerifier(c("n", "p"), c("n", "np", "p"))
devtools::test()
devtools::document()
?convertAccession
?verifySimpleConditions
?searchSRA
?verifyConditions
devtools::document()
?verifySimpleConditions
devtools::document()
?verifySimpleConditions
?universalExtractor
?createFtsTable
t1 <- matrix(rep(NA, 3), rep("", 3), rep("NA", 3), nrow = 3, ncol = 3)
t1 <- matrix(data = list(rep(NA, 3), rep("", 3), rep("NA", 3)), nrow = 3, ncol = 3)
t1
t1 <- data.frame(rep(NA, 3), rep("", 3), rep("NA", 3))
t1
t1 <- data.frame(rep(NA, 3), rep("", 3), rep("NA", 3), colnames = NULL)
t1 <- data.frame(rep(NA, 3), rep("", 3), rep("NA", 3))
View(t1)
naConverter(t1)
t1
View(naConverter(t1))
t1b <- naConverter(t1)
class(t1b[,1])
class(t1b[,2])
class(t1b[,3])
devtools::document()
?verifyConditions
?writeQuery
devtools::document()
?writeQuery
?withOut
?extractGSM
?searchForSRPChildren
?rbindUniqueCols
devtools::document()
?rbindUniqueCols
?unifyNAs
?universalExtractor
devtools::test()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
