{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Spider Development\"\noutput:\n  html_notebook:\n    code_folding: none\n    toc: yes\n    toc_float: yes\n  html_document:\n    toc: yes\n    toc_float: yes\n---\nNOTE: moved from \n\n##Spider logic (in progress)\n###Current search locations:\n* SRA database - sra table\n* GEO database - gsm table\n\n###Hierarchy of IDs:\n* SRP = GSE\n* SRX = GSM\n* SRR\n\n###Packages used\n* GEOmetadb (for fetching the GEOmetadb.sqlite.gz file)\n* SRAdb (for fetching SRAmetadb.sqlite file)\n* + any dependencies (RSQLite, DBI...)\n* X purrr\n* plyr\n* dplyr\n\n\n###Sequence of events:\n1. Search sra for entries containing TFs - sample_list <- searchForTerm()\n2. Extract unique SRPs and find all corresponding SRRs - all_list <- searchForSRPChildren()\n3. (Identify IgG/input/control SRRs - mark as \"I?\") IN PROGRESS\n4. Merge sample_list with all_list - spider_combined <- rbindUnique()  \nNOTE: sample_list will be marked with \"N\", putative inputs as \"I?\", remaining entries \"check\"\n6. Extract GSM numbers from experiment_title field - gsmExtractor()\n5. Get extra information from GEO database (currently antibody, tissue type and pubmed ids) - gseFinder()  \nNOTE: IN PROGRESS - will be split into keywordExtractor(), gseFinder(), gsmFinder() and superseriesFinder()\n6. (Identify experiments with multiple runs - srrCounter()) IN PROGRESS\n7. Change column names and order\n8. Select relevant columns to Spider output and Pipeline sample sheet\n\n###Sequence of events (v2):\n1. Search sra for entries containing TFs - sample_list <- searchForTerms()\n2. Extract unique SRPs and find all corresponding SRRs - all_list <- searchForSRPChildren()\n3. Combine sample_list with all_list (only add entries in all_list that do not already exist in sample_list)  \nAdd a column to indicate the origin of the row (\"N\" - sample, \"check\" - all) - rbindUnique()\n4. Extract GSMs from experiment_title to a separate column (whenever they exist) - gsmExtractor()\n5. Get extra information from \n\n##To be considered in due course:\n###Environment and files\n* Decide whether the sqlite file should be downloaded to the current working directory or elsewhere? E.g. where packages are downloaded?\n\n###Columns\n* Column management (special function for dbGetQuery which would append relevant columns...?)\n* Order of columns - follow database design??? Function for ordering them\n\n* Library_layout - get rid of information after \"PAIRED -\" or \"SINGLE -\"\n\n* Unify case sensitivity - have a separate variable to reflect that, which would act globally on all functions\n  But then: don't really need case sensitivity for inputDetector and universalExtractor...\n* [Check whether search is case sensitive or not (universalExtractor is ok)]\n\n* Consider adding links to accession webpages (SRA/GEO)\n* What else is worth getting from GEO???\n\n* Consider checking whether any of the extracts (in universalExtractor) is contained in the following extracts\n(current system doesn't check forwards)\n\n* Double check the ordering of the data frame\n\n* Think of a better place to add the column for control in RNA seq (maybe rbnindUnique???)\n\n* Check which fields are needed for Dora's sample sheet\n\n* Make a list of columns used by each of the functions\n\n###input/controlDetector\n* [D] Search inputs by whole cell extract (WCE) - partially done (wce)\n* Pondered having a separate column for checking inputs (different from the one added by rbindUnique)\n* Consider removing sample_attribute from search columns and searching in specific extracted columns instead\n* [D] First search in antibody column, then consider others... (GSE31477 - IgG in every title except input!!!)\n* Make sure that .*_names and .*_columns are the same length - partially done, but double check the list vs vector issue...\n* Check whether specified columns exist within the data frame - partially done, but might want to consider moving this to conditionVerifier2()\n* Label initial samples for RNA-seq!!! [IMPORTANT!!!]\n\n\n###Antibodies and categories\n* Consider Experimental Factor: immunoprecipitate: Anti-p53 in EXPERIMENT_ATTRIBUTE\n* Double check warnings in universalExtractor\n\n###SRA-GEO\n* Getting GSMs from other fields - e.g. run_alias (with _1, _2), study_alias\n* Getting GSEs - from study_accession, centre_project_name\n* Double check whether SRA_Accession file is any better than just searching through SRA...\n* geoFinder: rewrite using a loop rather than parametric queries...\n\n###searchForTerm()\n* [N] Add '%control%' to the list of excluded items in searchForTerm() - this will not be implemented. \n  Currently, searchForTerm searches for everything; controls and inputs are identified later (from SRP and also from among the samples) \n* [D] Filter by platform\n* [D] Specify symbols that can occur before search_term: [search_field] GLOB '*[list1]search_term[list2]*'\n  E.g. [list1] = [^a-z], [list2] = empty [done for gene and antibody, treatment without restrictions]\n* [D] Double check search fields [done for gene and treatment]\n* [D] Only verify conditions that have been specified (i.e. if no antibody provided, don't do any processing) [Done for all types with conditional searching, for simple searches, the function has a statement which prevents it from running]\n* Notify about the need to provide alternative names (e.g. Trp53 will be rejected unless added to the search terms list)\n* Make sure that synonyms are also considered in the verification process\n\n###Checking arguments\n* Make sure that secondary_library_strategy is atomic...\n* How many values allowed for each argumnent\n* Checking if secondary_library_strategy is not the same as original one?\n\n###conditionVerifier2()\n* Consider having a statement that when prefixes/suffixes are not provided, they will not be used\n* Inform if the specified columns do not exist within the data frame\n* Make sure that conditionVerifier2() is used whenever appropriate (rather than conditionVerifier() ). Consider renaming....\n\n###Library Strategy\n* Consider support for fuzzy matching of library strategies (e.g. RNA, rna, RNA-Seq, rna seq)\n* Extend the list of supported library_strategies\n\n###Filtering\n* Make sure that the secondary library strategy is enabled (currently it is not!!!)\n* Double check behaviour of controlDetector and enable filtering by control and sample ONLY in the outputGenerator (currently it is not enabled!!!)\n* Think about which columns to extract\n\n###Output\n* Inform user that only the first element of each search vector will be used\n* Decide on which df will be provided as an output of the function (as opposed to just being saved as .Rda or .csv)\n* Decide on the stage at which to order samples (props by SRP, SRS, SRX, SRR) and when to run mergeDetector\n* Split sampleSheetGenerator into ChIP and RNA\n* Changed content of 'experiment' field - it now contains SRP (previously it contained GSE) - double check if that is ok?\n* Include a clause not to return a file if the data frame has 0 rows (and throw a warning)\n\n###Superseries\n* Inform about the number of samples which belong to multiple GSEs (x out of N belong to more than one GSE) and offer the list of GSEs... \n  Also: suggest searching for superseries\n\n\n###Functions (in general)\n* Consider removing some of the print statements\n* Decide on consistent naming conventions\n\n###Global behaviour\n* Should the functions print anything? And if so, how should the printing be managed?\n* Change function names from lowerCamelCase to UpperCamelCase (e.g. change searchForTerm to SearchForTerm)\n* Make the naming system consistent (semantically, gramatically, spelling-wise)\n* Decide on the treatment of empty fields: NA, \"NA\", \"\"??? - naConverter() function to be applied...\n\n###Performance issues\n* Compare performance of parametrised SQL queries vs loops\n* Universal extractor is rather slow - consider alternative strategies or limiting number of categories\n\n###Done:\n* Do not remove GSMs from experiment title by splitting the string on colon!!! Use gsub()\n\n###Some thoughts:\n* SQL: column = 'sth' is much faster than column LIKE 'sth'\n",
    "created" : 1505326890128.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4036613588",
    "id" : "F15A17E7",
    "lastKnownWriteTime" : 1505494052,
    "last_content_update" : 1505494052521,
    "path" : "~/Documents/Anna/Spider201709/SpiderDev.Rmd",
    "project_path" : null,
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}